{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useToasts = exports.withToastManager = exports.ToastConsumer = exports.ToastProvider = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactDom = require('react-dom');\nvar _reactTransitionGroup = require('react-transition-group');\nvar _ToastController = require('./ToastController');\nvar _ToastContainer = require('./ToastContainer');\nvar _ToastElement = require('./ToastElement');\nvar _utils = require('./utils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar defaultComponents = {\n  Toast: _ToastElement.DefaultToast,\n  ToastContainer: _ToastContainer.ToastContainer\n};\n\n// $FlowFixMe `createContext`\nvar ToastContext = _react2.default.createContext();\nvar Consumer = ToastContext.Consumer,\n  Provider = ToastContext.Provider;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n// Provider\n// ==============================\n\nvar ToastProvider = exports.ToastProvider = function (_Component) {\n  _inherits(ToastProvider, _Component);\n  function ToastProvider() {\n    var _ref;\n    var _temp, _this, _ret;\n    _classCallCheck(this, ToastProvider);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ToastProvider.__proto__ || Object.getPrototypeOf(ToastProvider)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      toasts: []\n    }, _this.has = function (id) {\n      if (!_this.state.toasts.length) {\n        return false;\n      }\n      return Boolean(_this.state.toasts.filter(function (t) {\n        return t.id === id;\n      }).length);\n    }, _this.onDismiss = function (id) {\n      var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _utils.NOOP;\n      return function () {\n        cb(id);\n        _this.remove(id);\n      };\n    }, _this.add = function (content) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var cb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _utils.NOOP;\n      var id = options.id ? options.id : (0, _utils.generateUEID)();\n      var callback = function callback() {\n        return cb(id);\n      };\n\n      // bail if a toast exists with this ID\n      if (_this.has(id)) {\n        return;\n      }\n\n      // update the toast stack\n      _this.setState(function (state) {\n        var newToast = _extends({\n          content: content,\n          id: id\n        }, options);\n        var toasts = _this.props.newestOnTop ? [newToast].concat(_toConsumableArray(state.toasts)) : [].concat(_toConsumableArray(state.toasts), [newToast]);\n        return {\n          toasts: toasts\n        };\n      }, callback);\n\n      // consumer may want to do something with the generated ID (and not use the callback)\n      return id;\n    }, _this.remove = function (id) {\n      var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _utils.NOOP;\n      var callback = function callback() {\n        return cb(id);\n      };\n\n      // bail if NO toasts exists with this ID\n      if (!_this.has(id)) {\n        return;\n      }\n      _this.setState(function (state) {\n        var toasts = state.toasts.filter(function (t) {\n          return t.id !== id;\n        });\n        return {\n          toasts: toasts\n        };\n      }, callback);\n    }, _this.removeAll = function () {\n      if (!_this.state.toasts.length) {\n        return;\n      }\n      _this.state.toasts.forEach(function (t) {\n        return _this.remove(t.id);\n      });\n    }, _this.update = function (id) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var cb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _utils.NOOP;\n      var callback = function callback() {\n        return cb(id);\n      };\n\n      // bail if NO toasts exists with this ID\n      if (!_this.has(id)) {\n        return;\n      }\n\n      // update the toast stack\n      _this.setState(function (state) {\n        var old = state.toasts;\n        var i = old.findIndex(function (t) {\n          return t.id === id;\n        });\n        var updatedToast = _extends({}, old[i], options);\n        var toasts = [].concat(_toConsumableArray(old.slice(0, i)), [updatedToast], _toConsumableArray(old.slice(i + 1)));\n        return {\n          toasts: toasts\n        };\n      }, callback);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // Internal Helpers\n  // ------------------------------\n\n  // Public API\n  // ------------------------------\n\n  _createClass(ToastProvider, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var _props = this.props,\n        inheritedAutoDismiss = _props.autoDismiss,\n        autoDismissTimeout = _props.autoDismissTimeout,\n        children = _props.children,\n        components = _props.components,\n        placement = _props.placement,\n        portalTargetSelector = _props.portalTargetSelector,\n        transitionDuration = _props.transitionDuration;\n      var _defaultComponents$co = _extends({}, defaultComponents, components),\n        Toast = _defaultComponents$co.Toast,\n        ToastContainer = _defaultComponents$co.ToastContainer;\n      var add = this.add,\n        remove = this.remove,\n        removeAll = this.removeAll,\n        update = this.update;\n      var toasts = Object.freeze(this.state.toasts);\n      var hasToasts = Boolean(toasts.length);\n      var portalTarget = canUseDOM ? portalTargetSelector ? document.querySelector(portalTargetSelector) : document.body : null; // appease flow\n\n      return _react2.default.createElement(Provider, {\n        value: {\n          add: add,\n          remove: remove,\n          removeAll: removeAll,\n          update: update,\n          toasts: toasts\n        }\n      }, children, portalTarget ? (0, _reactDom.createPortal)(_react2.default.createElement(ToastContainer, {\n        placement: placement,\n        hasToasts: hasToasts\n      }, _react2.default.createElement(_reactTransitionGroup.TransitionGroup, {\n        component: null\n      }, toasts.map(function (_ref2) {\n        var appearance = _ref2.appearance,\n          autoDismiss = _ref2.autoDismiss,\n          content = _ref2.content,\n          id = _ref2.id,\n          onDismiss = _ref2.onDismiss,\n          unknownConsumerProps = _objectWithoutProperties(_ref2, ['appearance', 'autoDismiss', 'content', 'id', 'onDismiss']);\n        return _react2.default.createElement(_reactTransitionGroup.Transition, {\n          appear: true,\n          key: id,\n          mountOnEnter: true,\n          timeout: transitionDuration,\n          unmountOnExit: true\n        }, function (transitionState) {\n          return _react2.default.createElement(_ToastController.ToastController, _extends({\n            appearance: appearance,\n            autoDismiss: autoDismiss !== undefined ? autoDismiss : inheritedAutoDismiss,\n            autoDismissTimeout: autoDismissTimeout,\n            component: Toast,\n            key: id,\n            onDismiss: _this2.onDismiss(id, onDismiss),\n            placement: placement,\n            transitionDuration: transitionDuration,\n            transitionState: transitionState\n          }, unknownConsumerProps), content);\n        });\n      }))), portalTarget) : _react2.default.createElement(ToastContainer, {\n        placement: placement,\n        hasToasts: hasToasts\n      }) // keep ReactDOM.hydrate happy\n      );\n    }\n  }]);\n\n  return ToastProvider;\n}(_react.Component);\nToastProvider.defaultProps = {\n  autoDismiss: false,\n  autoDismissTimeout: 5000,\n  components: defaultComponents,\n  newestOnTop: false,\n  placement: 'top-right',\n  transitionDuration: 220\n};\nvar ToastConsumer = exports.ToastConsumer = function ToastConsumer(_ref3) {\n  var children = _ref3.children;\n  return _react2.default.createElement(Consumer, null, function (context) {\n    return children(context);\n  });\n};\nvar withToastManager = exports.withToastManager = function withToastManager(Comp\n// $FlowFixMe `forwardRef`\n) {\n  return _react2.default.forwardRef(function (props, ref) {\n    return _react2.default.createElement(ToastConsumer, null, function (context) {\n      return _react2.default.createElement(Comp, _extends({\n        toastManager: context\n      }, props, {\n        ref: ref\n      }));\n    });\n  });\n};\nvar useToasts = exports.useToasts = function useToasts() {\n  var ctx = (0, _react.useContext)(ToastContext);\n  if (!ctx) {\n    throw Error('The `useToasts` hook must be called from a descendent of the `ToastProvider`.');\n  }\n  return {\n    addToast: ctx.add,\n    removeToast: ctx.remove,\n    removeAllToasts: ctx.removeAll,\n    updateToast: ctx.update,\n    toastStack: ctx.toasts\n  };\n};","map":null,"metadata":{},"sourceType":"script"}